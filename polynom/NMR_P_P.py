from polynom import GCF_PP_P, DER_P_P, DIV_PP_P


def NMR_P_P(polynom):
    """
    P-13
    Преобразование многочлена - кратные корни в простые
    Ким Артём, 7305
    """
    if polynom[0] == 0:
        return polynom

    # (x-x1)^a1 * (x-x2)^a2 * (x-x3)^a3 * (. . .) ->
    # (x-x1)^(a1-1) * (x-x2)^a2 * (x-x3)^a3 * (. . .) +
    #       (x-x1)^a1 * (x-x2)^(a2-1) * (x-x3)^a3 * (. . .) +
    #       (x-x1)^a1 * (x-x2)^a2 * (x-x3)^(a3-1) * (. . .) + .....
    # НОД таких слагаемых = (x-x1)^(a1-1) * (x-x2)^(a2-1) * (. . .)
    # как и НОД многочлена и его производной
    der = DER_P_P(polynom)
    gcf = GCF_PP_P(polynom, der)
    # При делении многочлена на НОД этого многочлена и его производной все
    # корни кратности больше 1 сократят кратность до единицы
    return DIV_PP_P(polynom, gcf)

